import{_ as s,c as a,o as e,V as t}from"./chunks/framework.12b367d6.js";const D=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[],"relativePath":"getting-started.md","lastUpdated":1671654139000}'),n={name:"getting-started.md"},o=t(`<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h1><p>Fleet SDK is an easy-to-use, modular, and extensible off-chain SDK (Software Development Kit) for the <a href="https://ergoplatform.org/en/" target="_blank" rel="noreferrer">Ergo Platform</a>, written entirely in TypeScript.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><strong>Fleet SDK</strong> is currently in alpha status. It is already suitable for out-of-the-box use, but the API may still change between minor releases.</p></div><h2 id="step-1-install" tabindex="-1">Step. 1: Install <a class="header-anchor" href="#step-1-install" aria-label="Permalink to &quot;Step. 1: Install&quot;">​</a></h2><p>Add Fleet SDK as a dependency for the project.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-m34tP" id="tab-9f7OlZH" checked="checked"><label for="tab-9f7OlZH">NPM</label><input type="radio" name="group-m34tP" id="tab-nsoWrwy"><label for="tab-nsoWrwy">Yarn</label><input type="radio" name="group-m34tP" id="tab-z0-zttd"><label for="tab-z0-zttd">pnpm</label></div><div class="blocks"><div class="language-bash active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@fleet-sdk/core</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@fleet-sdk/core</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@fleet-sdk/core</span></span></code></pre></div></div></div><h2 id="step-2-import-modules" tabindex="-1">Step. 2: Import modules <a class="header-anchor" href="#step-2-import-modules" aria-label="Permalink to &quot;Step. 2: Import modules&quot;">​</a></h2><p>Next, you need to import the necessary components for your use case.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">TransactionBuilder</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">OutputBuilder</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@fleet-sdk/core</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="step-3-use-it" tabindex="-1">Step. 3: Use it! <a class="header-anchor" href="#step-3-use-it" aria-label="Permalink to &quot;Step. 3: Use it!&quot;">​</a></h2><p>You are ready to write awesome off-chain code!</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> unsignedTransaction </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TransactionBuilder</span><span style="color:#A6ACCD;">(creationHeight)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(inputs) </span><span style="color:#676E95;font-style:italic;">// add inputs</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">to</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// add outputs</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">OutputBuilder</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">1000000</span><span style="color:#C792EA;">n</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">9gNvAv97W71Wm33GoXgSQBFJxinFubKvE6wh2dEhFTSgYEe783j</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    )</span></span>
<span class="line"><span style="color:#A6ACCD;">  )</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sendChangeTo</span><span style="color:#A6ACCD;">(changeAddress) </span><span style="color:#676E95;font-style:italic;">// set change address</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">payMinFee</span><span style="color:#A6ACCD;">() </span><span style="color:#676E95;font-style:italic;">// set fee</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">build</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// build!</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If you do not know where <code>inputs</code> and <code>creationHeight</code> variables come from, please take a look at the <a href="/docs/wallet-interaction">Wallet Interaction</a> page.</p></div><h2 id="next-steps" tabindex="-1">Next steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next steps&quot;">​</a></h2><p>Follow along with the rest of this guide for an in-depth exploration of all Fleet packages. Or, if you prefer to get just what you need to start coding, pick the topic of your preference on the side panel.</p><p>If you are not yet familiar with Ergo transactions, you may want to look at the excellent &quot;<a href="https://docs.ergoplatform.com/dev/data-model/box/" target="_blank" rel="noreferrer">Anatomy of Ergo</a>&quot; section on Ergo Docs.</p>`,16),l=[o];function p(r,c,i,d,y,C){return e(),a("div",null,l)}const u=s(n,[["render",p]]);export{D as __pageData,u as default};
